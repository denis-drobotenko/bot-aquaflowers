#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ LINE.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.services.order_service import OrderService
from src.repositories.order_repository import OrderRepository

async def test_line_order():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–∫–∞–∑–∞ –≤ LINE."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–∫–∞–∑–∞ –≤ LINE...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    order_repo = OrderRepository()
    order_service = OrderService()
    order_service.repo = order_repo
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    session_id = "20250706_162943_50861_139"
    sender_id = "79140775712"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        print(f"üìã –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏: {session_id}")
        order_data = await order_service.get_order_data(session_id, sender_id)
        
        if not order_data:
            print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        print(f"‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω: {order_data.get('order_id')}")
        print(f"üì¶ –¢–æ–≤–∞—Ä—ã: {len(order_data.get('items', []))}")
        
        for i, item in enumerate(order_data.get('items', []), 1):
            print(f"  {i}. {item.get('bouquet')} x{item.get('quantity', 1)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ LINE
        print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ LINE...")
        result = await order_service.send_order_to_line(session_id, sender_id)
        
        if result == "ok":
            print("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ LINE!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    finally:
        # OrderRepository –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–∫—Ä—ã—Ç–∏—è
        pass

if __name__ == "__main__":
    asyncio.run(test_line_order()) 