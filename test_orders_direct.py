#!/usr/bin/env python3
"""
–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_orders_direct():
    print("üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders
        orders_ref = db.collection('orders')
        orders = list(orders_ref.stream())
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ orders: {len(orders)}")
        
        if orders:
            for order_doc in orders:
                order_data = order_doc.to_dict()
                print(f"\nüìÑ –î–æ–∫—É–º–µ–Ω—Ç: {order_doc.id}")
                print(f"   –î–∞–Ω–Ω—ã–µ: {order_data}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏
                subcollections = order_doc.reference.collections()
                for subcollection in subcollections:
                    print(f"   üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
                    subdocs = list(subcollection.stream())
                    print(f"      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(subdocs)}")
                    
                    for subdoc in subdocs:
                        subdata = subdoc.to_dict()
                        print(f"      üìÑ {subdoc.id}: {subdata}")
        else:
            print("‚ö†Ô∏è –í –∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—Å—Ç—å –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ —É –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞...")
            root_ref = db.collection('orders').document('root')
            root_doc = root_ref.get()
            
            if root_doc.exists:
                print("   ‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                subcollections = root_ref.collections()
                for subcollection in subcollections:
                    print(f"   üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
            else:
                print("   ‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_orders_direct()) 