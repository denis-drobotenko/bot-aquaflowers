"""
–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ WhatsApp Business API
"""

import httpx
from typing import Optional
from src.config.settings import WHATSAPP_TOKEN, WHATSAPP_PHONE_ID, WHATSAPP_CATALOG_ID
from src.services.catalog_service import CatalogService
from src.utils.whatsapp_client import WhatsAppClient
from src.services.message_service import MessageService
from src.models.message import Message, MessageRole
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class CatalogSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ WhatsApp"""
    def __init__(self):
        self.catalog_service = CatalogService(WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN)
        self.whatsapp_client = WhatsAppClient()
        self.message_service = MessageService()

    async def get_catalog_messages(self, to_number: str, sender_id: str = None, session_id: str = None):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
        –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî dict —Å type, image_url, caption.
        """
        print(f"[CATALOG_SEND] –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {to_number}")
        try:
            catalog_products = self.catalog_service.get_available_products()
            if not catalog_products:
                return [{
                    "type": "text",
                    "content": "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å –Ω–µ—Ç –±—É–∫–µ—Ç–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                }]
            messages = []
            for product in catalog_products:
                name = product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                price = product.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
                image_url = product.get('image_url')
                caption = f"{name}\n{price}"
                messages.append({
                    "type": "image",
                    "image_url": image_url,
                    "caption": caption
                })
            return messages
        except Exception as e:
            print(f"[CATALOG_SEND_ERROR] {e}")
            return [{
                "type": "text",
                "content": "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            }]

    async def send_catalog(self, to_number: str, session_id: str = None) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –æ–¥–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É (—Ç–æ–ª—å–∫–æ –≤ –Ω–∞–ª–∏—á–∏–∏)"""
        try:
            # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–∞
            logger.info(f"[CATALOG_SEND] WHATSAPP_CATALOG_ID: {WHATSAPP_CATALOG_ID}")
            logger.info(f"[CATALOG_SEND] WHATSAPP_TOKEN: {WHATSAPP_TOKEN[:8]}... (—Å–∫—Ä—ã—Ç)")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            available_products = self.catalog_service.get_available_products()
            logger.info(f"[CATALOG_SEND] –ù–∞–π–¥–µ–Ω–æ {len(available_products)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–≤—Å–µ–≥–æ: {len(self.catalog_service.get_products())})")

            if not available_products:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
                message_id = await self.whatsapp_client.send_text_message(
                    to_number, 
                    "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å –Ω–µ—Ç –±—É–∫–µ—Ç–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üå∏",
                    session_id
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                if message_id and session_id:
                    message = Message(
                        sender_id=to_number,
                        session_id=session_id,
                        role=MessageRole.ASSISTANT,
                        content="–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å –Ω–µ—Ç –±—É–∫–µ—Ç–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üå∏",
                        content_en="Sorry, there are no bouquets available now. Please try later. üå∏",
                        content_thai="‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á üå∏",
                        wa_message_id=message_id,
                        image_url=None,
                        timestamp=datetime.now()
                    )
                    await self.message_service.add_message_to_conversation(message)
                
                return False

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É –∫–∞–∂–¥–æ–≥–æ –±—É–∫–µ—Ç–∞
            for product in available_products:
                name = product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                price = product.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
                image_url = product.get('image_url')
                caption = f"{name}\n{price} üå∏"
                
                logger.info(f"[CATALOG_SEND] –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–≤–∞—Ä: {name} - {price}")
                
                if image_url:
                    message_id = await self.whatsapp_client.send_image_with_caption(
                        to_number, 
                        image_url, 
                        caption,
                        session_id
                    )
                else:
                    # –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                    message_id = await self.whatsapp_client.send_text_message(
                        to_number, 
                        caption,
                        session_id
                    )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                if message_id and session_id:
                    message = Message(
                        sender_id=to_number,
                        session_id=session_id,
                        role=MessageRole.ASSISTANT,
                        content=caption,
                        content_en=caption,
                        content_thai=caption,
                        wa_message_id=message_id,
                        image_url=image_url,
                        timestamp=datetime.now()
                    )
                    await self.message_service.add_message_to_conversation(message)
            
            logger.info(f"[CATALOG_SEND] –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {to_number}")
            return True
            
        except Exception as e:
            logger.error(f"[CATALOG_SEND_ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            message_id = await self.whatsapp_client.send_text_message(
                to_number, 
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. üå∏",
                session_id
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            if message_id and session_id:
                message = Message(
                    sender_id=to_number,
                    session_id=session_id,
                    role=MessageRole.ASSISTANT,
                    content="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. üå∏",
                    content_en="An error occurred while sending the catalog. üå∏",
                    content_thai="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏Ñ‡∏ï‡∏ï‡∏≤‡∏•‡πá‡∏≠‡∏Å üå∏",
                    wa_message_id=message_id,
                    image_url=None,
                    timestamp=datetime.now()
                )
                await self.message_service.add_message_to_conversation(message)
            
            return False

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
catalog_sender = CatalogSender()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
async def handle_send_catalog(to_number: str, sender_id: str = None, session_id: str = None) -> bool:
    """–§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    return await catalog_sender.send_catalog(to_number, session_id) 