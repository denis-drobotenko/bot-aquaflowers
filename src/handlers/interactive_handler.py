"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

from typing import Dict, Any
from src.services.catalog_service import CatalogService
from src.config.settings import WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN

class InteractiveHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–∫–∏, –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤)"""
    
    def __init__(self):
        self.catalog_service = CatalogService(WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN)
    
    async def process_interactive_message(self, sender_id: str, interactive_data: Dict[str, Any]) -> str:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–Ω–æ–ø–∫–∏, –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤).
        
        –¢–∏–ø—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
        - button: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        - catalog_message: –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
        - list_reply: –≤—ã–±–æ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
        
        Args:
            sender_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è WhatsApp
            interactive_data: –î–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            
        Returns:
            str: –û—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        """
        interactive_type = interactive_data.get('type')
        print(f"[INTERACTIVE] –û–±—Ä–∞–±–æ—Ç–∫–∞ {interactive_type} –æ—Ç {sender_id}")
        
        if interactive_type == 'button':
            return await self._handle_button_click(interactive_data)
        
        elif interactive_type == 'catalog_message':
            return await self._handle_catalog_selection(interactive_data)
        
        else:
            print(f"[INTERACTIVE] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø: {interactive_type}")
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ! üå∏"
    
    async def _handle_button_click(self, interactive_data: Dict[str, Any]) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏"""
        button_id = interactive_data.get('button_reply', {}).get('id')
        print(f"[BUTTON] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {button_id}")
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        if button_id == 'catalog':
            return "–í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤! üå∏"
        elif button_id == 'help':
            return "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üå∏"
        else:
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä! üå∏"
    
    async def _handle_catalog_selection(self, interactive_data: Dict[str, Any]) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        catalog_data = interactive_data.get('catalog_message', {})
        retailer_id = catalog_data.get('retailer_id')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º retailer_id
        print(f"[CATALOG] –í—ã–±—Ä–∞–Ω —Ç–æ–≤–∞—Ä: {retailer_id}")
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
        validation = await self.catalog_service.validate_product(retailer_id)
        if validation['valid']:
            product = validation['product']
            return f"–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! {product.get('name')} - {product.get('price')} üå∏"
        else:
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω üå∏" 