#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ WABA –ª–æ–≥–≥–µ—Ä–∞
"""

import asyncio
from src.utils.waba_logger import waba_logger

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ webhook
test_webhook = {
    "entry": [{
        "changes": [{
            "value": {
                "messages": [{
                    "id": "wamid.test123",
                    "type": "text",
                    "from": "79140775712",
                    "timestamp": "1234567890",
                    "text": {
                        "body": "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"
                    }
                }],
                "contacts": [{
                    "wa_id": "79140775712",
                    "profile": {
                        "name": "–î–µ–Ω–∏—Å"
                    }
                }]
            }
        }]
    }]
}

test_status_webhook = {
    "entry": [{
        "changes": [{
            "value": {
                "statuses": [{
                    "id": "wamid.test456",
                    "status": "delivered",
                    "recipient_id": "79140775712"
                }]
            }
        }]
    }]
}

async def test_waba_logger():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç WABA –ª–æ–≥–≥–µ—Ä"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WABA –ª–æ–≥–≥–µ—Ä–∞...")
    
    # –¢–µ—Å—Ç 1: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    print("\n1. –¢–µ—Å—Ç webhook —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º:")
    wamid = waba_logger.log_webhook_received(test_webhook)
    print(f"   –ü–æ–ª—É—á–µ–Ω wamid: {wamid}")
    
    # –¢–µ—Å—Ç 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
    print("\n2. –¢–µ—Å—Ç webhook —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º:")
    wamid_status = waba_logger.log_webhook_received(test_status_webhook)
    print(f"   –ü–æ–ª—É—á–µ–Ω wamid: {wamid_status}")
    
    # –¢–µ—Å—Ç 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    print("\n3. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
    waba_logger.log_webhook_validation(wamid, {"valid": True, "type": "message", "message_type": "text"})
    
    # –¢–µ—Å—Ç 4: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ AI –æ–±—Ä–∞–±–æ—Ç–∫–∏
    print("\n4. –¢–µ—Å—Ç AI –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    waba_logger.log_ai_processing(wamid, "79140775712", "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?")
    
    # –¢–µ—Å—Ç 5: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ AI
    print("\n5. –¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞ AI:")
    waba_logger.log_ai_response(wamid, "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", {"type": "greeting"})
    
    # –¢–µ—Å—Ç 6: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n6. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    waba_logger.log_message_sent(wamid, "79140775712", "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å.", "wamid.response789")
    
    # –¢–µ—Å—Ç 7: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
    print("\n7. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î:")
    waba_logger.log_message_save(wamid, "79140775712", "session123", "user", "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?")
    
    # –¢–µ—Å—Ç 8: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    print("\n8. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã:")
    waba_logger.log_command_handled(wamid, "save_order_info", {"action": "order_saved"})
    
    # –¢–µ—Å—Ç 9: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    print("\n9. –¢–µ—Å—Ç –æ—à–∏–±–∫–∏:")
    waba_logger.log_error(wamid, "Connection timeout", "send_message")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª WABA.log –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

if __name__ == "__main__":
    asyncio.run(test_waba_logger()) 