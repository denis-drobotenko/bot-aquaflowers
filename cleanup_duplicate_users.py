#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
from datetime import datetime
from google.cloud import firestore

async def cleanup_duplicate_users():
    """–û—á–∏—â–∞–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    users_ref = db.collection('users')
    
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    docs = users_ref.stream()
    
    users = []
    for doc in docs:
        user_data = doc.to_dict()
        user_data['doc_id'] = doc.id
        users.append(user_data)
    
    print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ sender_id
    sender_groups = {}
    for user in users:
        sender_id = user.get('sender_id', 'unknown')
        if sender_id not in sender_groups:
            sender_groups[sender_id] = []
        sender_groups[sender_id].append(user)
    
    # –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    duplicates = {}
    for sender_id, user_list in sender_groups.items():
        if len(user_list) > 1:
            duplicates[sender_id] = user_list
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏")
    
    total_deleted = 0
    
    for sender_id, user_list in duplicates.items():
        print(f"\nüì± –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {sender_id}:")
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è (—Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –ø–µ—Ä–≤—ã–π)
        sorted_users = sorted(user_list, key=lambda x: x.get('created_at', ''))
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π, —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        keep_user = sorted_users[0]
        users_to_delete = sorted_users[1:]
        
        print(f"   –û—Å—Ç–∞–≤–ª—è–µ–º: {keep_user['doc_id']} (—Å–æ–∑–¥–∞–Ω: {keep_user.get('created_at', 'N/A')})")
        print(f"   –£–¥–∞–ª—è–µ–º: {len(users_to_delete)} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
        
        for user_to_delete in users_to_delete:
            try:
                doc_ref = users_ref.document(user_to_delete['doc_id'])
                doc_ref.delete()
                print(f"     ‚úÖ –£–¥–∞–ª–µ–Ω: {user_to_delete['doc_id']}")
                total_deleted += 1
            except Exception as e:
                print(f"     ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {user_to_delete['doc_id']}: {e}")
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {total_deleted}")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(cleanup_duplicate_users()) 