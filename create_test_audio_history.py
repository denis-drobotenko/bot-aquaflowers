#!/usr/bin/env python3
import firebase_admin
from firebase_admin import credentials, firestore
from datetime import datetime, timezone
import json

def create_test_audio_history():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é —Å –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
        if not firebase_admin._apps:
            cred = credentials.Certificate("src/aquaf.json")
            firebase_admin.initialize_app(cred)
        
        db = firestore.client()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        sender_id = "79037286228"
        session_id = "test_audio_session_20250708"
        
        # URL –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ —Å —Ä–µ—á—å—é
        audio_url = "https://storage.googleapis.com/aquaflowers-bot-audio/voice_message_real_speech.wav"
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = [
            {
                "role": "user",
                "content": "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç",
                "content_en": "Hello! I want to order a bouquet",
                "content_thai": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏â‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ",
                "timestamp": datetime.now(timezone.utc),
                "wa_message_id": "test_wa_msg_1"
            },
            {
                "role": "assistant",
                "content": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–æ–Ω–µ—á–Ω–æ, —è –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –±—É–∫–µ—Ç. –í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥:",
                "content_en": "Hello! Of course, I'll help you choose a bouquet. Here's our catalog:",
                "content_thai": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô ‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏Ñ‡∏ï‡∏ï‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤:",
                "timestamp": datetime.now(timezone.utc),
                "wa_message_id": "test_wa_msg_2"
            },
            {
                "role": "user",
                "content": "[AUDIO] –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ",
                "content_en": "[AUDIO] Hello! This is a test audio message",
                "content_thai": "[AUDIO] ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö",
                "timestamp": datetime.now(timezone.utc),
                "wa_message_id": "test_wa_msg_3",
                "audio_url": audio_url,
                "audio_duration": "1.1",
                "transcription": "rant"
            },
            {
                "role": "assistant",
                "content": "–ü–æ–Ω—è–ª –≤–∞—à–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ! –í—ã —Å–∫–∞–∑–∞–ª–∏: 'rant'. –ö–∞–∫–æ–π –±—É–∫–µ—Ç –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                "content_en": "I understood your audio message! You said: 'rant'. What bouquet interests you?",
                "content_thai": "‡∏â‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì! ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤: 'rant' ‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à?",
                "timestamp": datetime.now(timezone.utc),
                "wa_message_id": "test_wa_msg_4"
            },
            {
                "role": "user",
                "content": "–°–ø–∞—Å–∏–±–æ! –•–æ—á—É –±—É–∫–µ—Ç —Ä–æ–∑",
                "content_en": "Thank you! I want a rose bouquet",
                "content_thai": "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì! ‡∏â‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡∏Å‡∏∏‡∏´‡∏•‡∏≤‡∏ö",
                "timestamp": datetime.now(timezone.utc),
                "wa_message_id": "test_wa_msg_5"
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ (conversations)
        session_ref = db.collection('conversations').document(sender_id).collection('sessions').document(session_id)
        session_ref.set({
            'session_id': session_id,
            'sender_id': sender_id,
            'created_at': datetime.now(timezone.utc),
            'status': 'active'
        })
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        messages_ref = session_ref.collection('messages')
        
        for i, msg_data in enumerate(messages):
            message_id = f"test_msg_{i+1}"
            messages_ref.document(message_id).set(msg_data)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {i+1}: {msg_data['role']}")
        
        print(f"üéâ –¢–µ—Å—Ç–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ!")
        print(f"üì± Sender ID: {sender_id}")
        print(f"üí¨ Session ID: {session_id}")
        print(f"üéµ Audio URL: {audio_url}")
        print(f"üîó –°—Å—ã–ª–∫–∞: http://localhost:8080/chat/history/{sender_id}/{session_id}")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    create_test_audio_history() 