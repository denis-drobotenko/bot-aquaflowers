#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤ Firestore
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_list_collections():
    print("üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤ Firestore...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
        collections = db.collections()
        
        print("üìã –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:")
        for collection in collections:
            print(f"   üìÅ {collection.id}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            docs = list(collection.limit(3).stream())
            print(f"      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(docs)}")
            
            for doc in docs:
                print(f"      üìÑ {doc.id}")
                
                # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è orders, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏
                if collection.id == 'orders':
                    subcollections = doc.reference.collections()
                    for subcollection in subcollections:
                        print(f"         üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
                        subdocs = list(subcollection.limit(2).stream())
                        print(f"            –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(subdocs)}")
                        for subdoc in subdocs:
                            print(f"            üìÑ {subdoc.id}")
            
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_list_collections()) 