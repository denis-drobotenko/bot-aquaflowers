#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook'–æ–≤ —Å —Ç–∏–ø–æ–º "–ø–µ—á–∞—Ç–∞–µ—Ç" –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
"""

import json
import requests

# URL –≤–∞—à–µ–≥–æ webhook endpoint
WEBHOOK_URL = "http://localhost:8000/webhook"

def test_typing_webhook():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook —Å —Ç–∏–ø–æ–º 'typing' (–ø–µ—á–∞—Ç–∞–µ—Ç)"""
    
    # Webhook —Å —Ç–∏–ø–æ–º "–ø–µ—á–∞—Ç–∞–µ—Ç"
    typing_webhook = {
        "object": "whatsapp_business_account",
        "entry": [
            {
                "id": "515848908286141",
                "changes": [
                    {
                        "value": {
                            "messaging_product": "whatsapp",
                            "metadata": {
                                "display_phone_number": "66963617068",
                                "phone_number_id": "494991623707876"
                            },
                            "contacts": [
                                {
                                    "profile": {
                                        "name": "Test User"
                                    },
                                    "wa_id": "79140775712"
                                }
                            ],
                            "messages": [
                                {
                                    "from": "79140775712",
                                    "id": "wamid.test.typing.message",
                                    "timestamp": "1751670861",
                                    "type": "typing"
                                }
                            ]
                        },
                        "field": "messages"
                    }
                ]
            }
        ]
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å —Ç–∏–ø–æ–º 'typing'...")
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ {WEBHOOK_URL}")
    print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(typing_webhook, indent=2)}")
    
    try:
        response = requests.post(WEBHOOK_URL, json=typing_webhook)
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get("status") == "ignored":
                print("‚úÖ –£–°–ü–ï–•: Webhook —Å —Ç–∏–ø–æ–º 'typing' –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω!")
            else:
                print("‚ùå –û–®–ò–ë–ö–ê: Webhook —Å —Ç–∏–ø–æ–º 'typing' –æ–±—Ä–∞–±–æ—Ç–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_reaction_webhook():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook —Å —Ç–∏–ø–æ–º 'reaction' (—Ä–µ–∞–∫—Ü–∏—è)"""
    
    # Webhook —Å —Ç–∏–ø–æ–º "—Ä–µ–∞–∫—Ü–∏—è"
    reaction_webhook = {
        "object": "whatsapp_business_account",
        "entry": [
            {
                "id": "515848908286141",
                "changes": [
                    {
                        "value": {
                            "messaging_product": "whatsapp",
                            "metadata": {
                                "display_phone_number": "66963617068",
                                "phone_number_id": "494991623707876"
                            },
                            "contacts": [
                                {
                                    "profile": {
                                        "name": "Test User"
                                    },
                                    "wa_id": "79140775712"
                                }
                            ],
                            "messages": [
                                {
                                    "from": "79140775712",
                                    "id": "wamid.test.reaction.message",
                                    "timestamp": "1751670861",
                                    "type": "reaction",
                                    "reaction": {
                                        "message_id": "wamid.original.message",
                                        "emoji": "üëç"
                                    }
                                }
                            ]
                        },
                        "field": "messages"
                    }
                ]
            }
        ]
    }
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å —Ç–∏–ø–æ–º 'reaction'...")
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ {WEBHOOK_URL}")
    
    try:
        response = requests.post(WEBHOOK_URL, json=reaction_webhook)
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get("status") == "ignored":
                print("‚úÖ –£–°–ü–ï–•: Webhook —Å —Ç–∏–ø–æ–º 'reaction' –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω!")
            else:
                print("‚ùå –û–®–ò–ë–ö–ê: Webhook —Å —Ç–∏–ø–æ–º 'reaction' –æ–±—Ä–∞–±–æ—Ç–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_metrics():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ webhook'–æ–≤"""
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ webhook'–æ–≤...")
    
    try:
        response = requests.get(f"{WEBHOOK_URL}/metrics")
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            metrics = response.json()
            print(f"üìà –ú–µ—Ç—Ä–∏–∫–∏: {json.dumps(metrics, indent=2)}")
            
            if metrics.get("skipped_messages", 0) > 0:
                print("‚úÖ –£–°–ü–ï–•: –ú–µ—Ç—Ä–∏–∫–∞ 'skipped_messages' —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            else:
                print("‚ÑπÔ∏è  –ú–µ—Ç—Ä–∏–∫–∞ 'skipped_messages' –ø–æ–∫–∞ 0 (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Ç—Ä–∏–∫: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook'–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å —Ç–∏–ø–æ–º "–ø–µ—á–∞—Ç–∞–µ—Ç"
    test_typing_webhook()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å —Ç–∏–ø–æ–º "—Ä–µ–∞–∫—Ü–∏—è"
    test_reaction_webhook()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
    test_metrics()
    
    print("\n‚ú® –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!") 