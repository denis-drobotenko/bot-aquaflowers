#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_users_orders():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_ref = db.collection('users')
        users = list(users_ref.stream())
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        total_orders = 0
        
        for user_doc in users:
            user_data = user_doc.to_dict()
            sender_id = user_data.get('sender_id', user_doc.id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—é orders —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            orders_ref = user_doc.reference.collection('orders')
            orders = list(orders_ref.stream())
            
            if orders:
                print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('name', 'Unknown')} ({sender_id})")
                print(f"   üì¶ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
                total_orders += len(orders)
                
                for order_doc in orders:
                    order_data = order_doc.to_dict()
                    print(f"   üîç –ó–∞–∫–∞–∑: {order_doc.id} | –°—Ç–∞—Ç—É—Å: {order_data.get('status', 'N/A')}")
        
        print(f"\nüìä –ò—Ç–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {total_orders}")
        
        if total_orders == 0:
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ sessions —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            for user_doc in users:
                user_data = user_doc.to_dict()
                sender_id = user_data.get('sender_id', user_doc.id)
                
                sessions_ref = user_doc.reference.collection('sessions')
                sessions = list(sessions_ref.stream())
                
                if sessions:
                    print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('name', 'Unknown')} ({sender_id})")
                    print(f"   üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(sessions)}")
                    
                    for session_doc in sessions:
                        session_data = session_doc.to_dict()
                        if 'order_id' in session_data or 'items' in session_data:
                            print(f"   üîç –°–µ—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–æ–º: {session_doc.id} | –°—Ç–∞—Ç—É—Å: {session_data.get('status', 'N/A')}")
                            total_orders += 1
            
            print(f"\nüìä –ò—Ç–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–µ—Å—Å–∏—è—Ö: {total_orders}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_users_orders()) 