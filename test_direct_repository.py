#!/usr/bin/env python3
"""
–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from src.repositories.order_repository import OrderRepository

async def test_direct_repository():
    print("üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    repo = OrderRepository()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º get_all_orders
        print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º get_all_orders()...")
        orders = await repo.get_all_orders()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
        
        if orders:
            print("üìã –ó–∞–∫–∞–∑—ã:")
            for i, order in enumerate(orders[:3]):
                print(f"  {i+1}. ID: {order.order_id}")
                print(f"     –°—Ç–∞—Ç—É—Å: {order.status}")
                print(f"     –ö–ª–∏–µ–Ω—Ç: {order.sender_id}")
                print(f"     –°–µ—Å—Å–∏—è: {order.session_id}")
                print(f"     –¢–æ–≤–∞—Ä—ã: {len(order.items)}")
        else:
            print("‚ö†Ô∏è –ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑
        print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑...")
        specific_order = await repo.get_order_by_session("79140775712", "20250707_015555_233876_286")
        if specific_order:
            print(f"‚úÖ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω: {specific_order.order_id}")
            print(f"   –°—Ç–∞—Ç—É—Å: {specific_order.status}")
            print(f"   –¢–æ–≤–∞—Ä—ã: {len(specific_order.items)}")
        else:
            print("‚ùå –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_direct_repository()) 