import requests
import json
import re

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏
url = "https://auraflora-bot-75152239022.asia-southeast1.run.app/api/debug/logs"
response = requests.get(url)
data = response.json()
logs = data['logs']

print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(logs)} –ª–æ–≥–æ–≤")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ debug_clean.html
def extractUserMessageFromLog(logMessage):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: 'text': {'body': '–ü—Ä–∏–≤–µ—Ç'}
        jsonMatch = re.search(r"'text':\s*\{'body':\s*'([^']+)'", logMessage)
        if jsonMatch:
            return jsonMatch.group(1).strip()
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω —Å –¥–≤–æ–π–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏
        jsonMatch2 = re.search(r'"text":\s*{\s*"body":\s*"([^"]+)"', logMessage)
        if jsonMatch2:
            return jsonMatch2.group(1).strip()
        
    except Exception as e:
        print(f"Error: {e}")
    return ""

def extractBotResponseFromLog(logMessage):
    try:
        # [AI_FINAL_RESULT] Text: –î–æ–±—Ä–æ–π –Ω–æ—á–∏, Denis! –†–∞–¥–∞ —Å–Ω–æ–≤–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üå∏
        aiMatch = re.search(r'\[AI_FINAL_RESULT\] Text:\s*(.+)', logMessage)
        if aiMatch:
            return aiMatch.group(1).strip()
        
        # [WEBHOOK_AI_RESPONSE_TEXT] –î–æ–±—Ä–æ–π –Ω–æ—á–∏, Denis! –†–∞–¥–∞ —Å–Ω–æ–≤–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üå∏
        responseMatch = re.search(r'\[WEBHOOK_AI_RESPONSE_TEXT\]\s*(.+)', logMessage)
        if responseMatch:
            return responseMatch.group(1).strip()
        
        # [MESSAGE_SEND_INPUT] Original message: –î–æ–±—Ä–æ–π –Ω–æ—á–∏, Denis! –†–∞–¥–∞ —Å–Ω–æ–≤–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! üå∏
        sendMatch = re.search(r'\[MESSAGE_SEND_INPUT\] Original message:\s*(.+)', logMessage)
        if sendMatch:
            return sendMatch.group(1).strip()
        
    except Exception as e:
        print(f"Error: {e}")
    return ""

# –ò—â–µ–º –ª–æ–≥–∏ —Å AI –æ—Ç–≤–µ—Ç–∞–º–∏
ai_logs = []
for log in logs:
    message = log.get('message', '')
    if any(pattern in message for pattern in ['[AI_FINAL_RESULT]', '[AI_RESPONSE]', '[AI_TEXT]', '[AI_RESULT]', '[PARSE_RESPONSE]', '[JSON_EXTRACT_RESULT]']):
        ai_logs.append(log)

print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(ai_logs)} –ª–æ–≥–æ–≤ —Å AI –æ—Ç–≤–µ—Ç–∞–º–∏:")
for i, log in enumerate(ai_logs[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
    print(f"\nAI –ª–æ–≥ {i+1}:")
    print(f"Logger: {log.get('logger_name')}")
    print(f"Message: {log.get('message')}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    content = extractBotResponseFromLog(log.get('message', ''))
    if content:
        print(f"–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {content}")
    else:
        print("–û—Ç–≤–µ—Ç –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω")

# –ò—â–µ–º –ª–æ–≥–∏ —Å –≤—Ö–æ–¥—è—â–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
incoming_logs = []
for log in logs:
    message = log.get('message', '')
    if '[WEBHOOK_RAW_MESSAGE]' in message and ('"text"' in message or "'text'" in message):
        incoming_logs.append(log)

print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(incoming_logs)} –ª–æ–≥–æ–≤ —Å –≤—Ö–æ–¥—è—â–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏:")
for i, log in enumerate(incoming_logs[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
    print(f"\n–í—Ö–æ–¥—è—â–∏–π –ª–æ–≥ {i+1}:")
    print(f"Logger: {log.get('logger_name')}")
    print(f"Message: {log.get('message')}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    content = extractUserMessageFromLog(log.get('message', ''))
    if content:
        print(f"–ò–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {content}")
    else:
        print("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω–æ") 