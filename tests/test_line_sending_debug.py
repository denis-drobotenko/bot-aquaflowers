#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ LINE
"""

import sys
import os
import pytest
import asyncio
import logging
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG)

from src import database, session_manager, order_utils, config
from linebot import LineBotApi
from linebot.models import TextSendMessage

@pytest.mark.asyncio
async def test_line_sending_debug():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–∫–∞–∑–∞ –≤ LINE —Å –æ—Ç–ª–∞–¥–∫–æ–π"""
    print("=== –û–¢–õ–ê–î–û–ß–ù–´–ô –¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –í LINE ===")
    
    sender_id = "test_user_line_debug"
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    session_id = session_manager.get_or_create_session_id(sender_id)
    print(f"1. –°–µ—Å—Å–∏—è: {session_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏—é
    database.add_message(sender_id, session_id, "user", "–ü—Ä–∏–≤–µ—Ç!")
    database.add_message(sender_id, session_id, "model", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
    database.add_message(sender_id, session_id, "user", "–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç Good vibes")
    database.add_message(sender_id, session_id, "model", "–û—Ç–ª–∏—á–Ω–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏")
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    order_data = {
        'bouquet': 'Good vibes üå∏',
        'date': '05 July 2025',
        'time': '10:00',
        'delivery_needed': False,
        'address': None,
        'card_needed': False,
        'card_text': None,
        'recipient_name': '–ü–µ—Ç—Ä',
        'recipient_phone': '3543585834',
        'retailer_id': 'rldxcifo_goodvibes'
    }
    
    print(f"2. –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞: {order_data}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é LINE
    print("3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é LINE...")
    print(f"   LINE_ACCESS_TOKEN: {'–ï—Å—Ç—å' if config.LINE_ACCESS_TOKEN else '–ù–ï–¢!'}")
    print(f"   LINE_GROUP_ID: {config.LINE_GROUP_ID}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ LINE API
    print("4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ LINE API...")
    try:
        line_bot_api = LineBotApi(config.LINE_ACCESS_TOKEN)
        test_message = "üîç –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç AuraFlora Bot\n–¢–µ—Å—Ç –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏"
        line_bot_api.push_message(config.LINE_GROUP_ID, TextSendMessage(text=test_message))
        print("   ‚úÖ –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç 5: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ LINE —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
    print("5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ LINE —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é...")
    try:
        result = await order_utils.send_order_to_line(sender_id, session_id, order_data)
        print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")
        
        if "–û—à–∏–±–∫–∞" in result:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")
            return False
        else:
            print(f"   ‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ LINE!")
            return True
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        import traceback
        print(f"   ‚ùå Traceback: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    asyncio.run(test_line_sending_debug()) 