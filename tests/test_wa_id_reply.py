#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ reply —Å WA ID —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
"""

import sys
import os
import time
import pytest
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from src import database, session_manager, command_handler

@pytest.mark.asyncio
async def test_wa_id_reply():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É reply —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º WA ID"""
    print("=== –¢–ï–°–¢ REPLY –° WA ID ===")
    
    sender_id = "test_user_reply"
    session_id = session_manager.get_or_create_session_id(sender_id)
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º session_id: {session_id}")

    # –¢–µ—Å—Ç 1: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º (–∫–∞–∫ AI)
    bouquet_wa_id = "wamid.HBgLMTIzNDU2Nzg5MDEyMzQ1NgAB"
    bouquet_message = "üå∏ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –±—É–∫–µ—Ç\n–¶–µ–Ω–∞: 1500 —Ä—É–±\nID: BOUQ001"
    
    print(f"1. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º —Å WA ID: {bouquet_wa_id}")
    database.add_message_with_wa_id(sender_id, session_id, "model", bouquet_message, bouquet_wa_id)
    
    # –¢–µ—Å—Ç 2: –ò–º–∏—Ç–∏—Ä—É–µ–º reply –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –±—É–∫–µ—Ç
    user_reply_wa_id = "wamid.HBgLMTIzNDU2Nzg5MDEyMzQ1NgAC"
    user_message = "–•–æ—á—É —ç—Ç–æ—Ç –±—É–∫–µ—Ç"
    
    print(f"2. –°–æ—Ö—Ä–∞–Ω—è–µ–º reply –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å WA ID: {user_reply_wa_id}")
    database.add_message_with_wa_id(sender_id, session_id, "user", user_message, user_reply_wa_id)
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ WA ID
    print(f"3. –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º –ø–æ WA ID: {bouquet_wa_id}")
    retrieved_bouquet = database.get_message_by_wa_id(sender_id, session_id, bouquet_wa_id)
    
    assert retrieved_bouquet is not None, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    assert retrieved_bouquet['role'] == 'model', "–ù–µ–≤–µ—Ä–Ω–∞—è —Ä–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±—É–∫–µ—Ç–æ–º"
    assert 'üå∏' in retrieved_bouquet['content'], "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏ –±—É–∫–µ—Ç–∞"
    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º –Ω–∞–π–¥–µ–Ω–æ: {retrieved_bouquet['content'][:50]}...")
    
    # –¢–µ—Å—Ç 4: –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É reply –≤ command_handler
    print("4. –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É reply –≤ command_handler")
    message_with_reply = {
        'reply_to_message_id': bouquet_wa_id,
        'text': {'body': user_message}
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ handle_user_message –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç reply
    from src import command_handler
    result = await command_handler.handle_user_message(sender_id, session_id, message_with_reply)
    
    # –ï—Å–ª–∏ reply –Ω–∞ –±—É–∫–µ—Ç - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞ –±—É–∫–µ—Ç–∞
    if result and result.get('action') == 'bouquet_selected':
        print("‚úÖ Reply –Ω–∞ –±—É–∫–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
    else:
        print("‚ÑπÔ∏è Reply –Ω–µ –±—ã–ª —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –≤—ã–±–æ—Ä –±—É–∫–µ—Ç–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –∫–∞—Ç–∞–ª–æ–≥–∞)")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è AI
    print("5. –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è AI")
    history = database.get_conversation_history_for_ai(sender_id, session_id)
    
    assert len(history) >= 2, "–ò—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–æ–æ–±—â–µ–Ω–∏—è"
    print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏
    roles = [msg.get('role') for msg in history]
    print(f"–†–æ–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏: {roles}")
    
    print("\n=== –í–°–ï –¢–ï–°–¢–´ REPLY –° WA ID –ü–†–û–ô–î–ï–ù–´ ===")

if __name__ == "__main__":
    import asyncio
    asyncio.run(test_wa_id_reply()) 