#!/usr/bin/env python3
"""
–¢–µ—Å—Ç webhook —Å –∫–æ–º–∞–Ω–¥–æ–π /newses
"""

import sys
import os
import time
import pytest
import json
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from src import database, session_manager, whatsapp_utils

@pytest.mark.asyncio
async def test_newses_webhook():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É webhook —Å –∫–æ–º–∞–Ω–¥–æ–π /newses"""
    print("=== –¢–ï–°–¢ WEBHOOK –° /NEWSES ===")
    
    sender_id = "test_user_newses_webhook"
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    initial_session_id = session_manager.get_or_create_session_id(sender_id)
    print(f"1. –ù–∞—á–∞–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è: {initial_session_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    database.add_message(sender_id, initial_session_id, "user", "–ü—Ä–∏–≤–µ—Ç!")
    database.add_message(sender_id, initial_session_id, "assistant", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
    database.add_message(sender_id, initial_session_id, "user", "–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç")
    
    initial_history = database.get_conversation_history_for_ai(sender_id, initial_session_id)
    print(f"‚úÖ –í –Ω–∞—á–∞–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏ {len(initial_history)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –¢–µ—Å—Ç 2: –ò–º–∏—Ç–∏—Ä—É–µ–º webhook —Å –∫–æ–º–∞–Ω–¥–æ–π /newses
    print("2. –ò–º–∏—Ç–∏—Ä—É–µ–º webhook —Å –∫–æ–º–∞–Ω–¥–æ–π /newses")
    
    # –ú–æ–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
    sent_messages = []
    async def fake_send_message(to, msg, sender_id=None, session_id=None):
        sent_messages.append({
            'to': to,
            'message': msg,
            'sender_id': sender_id,
            'session_id': session_id
        })
        return True
    
    # –ü–æ–¥–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏
    original_send = whatsapp_utils.send_whatsapp_message
    whatsapp_utils.send_whatsapp_message = fake_send_message
    
    try:
        # –ò–º–∏—Ç–∏—Ä—É–µ–º webhook –¥–∞–Ω–Ω—ã–µ
        webhook_body = {
            'entry': [{
                'changes': [{
                    'value': {
                        'messages': [{
                            'id': 'wamid.test_newses_webhook',
                            'from': sender_id,
                            'text': {'body': '/newses'},
                            'type': 'text'
                        }]
                    }
                }]
            }]
        }
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥—ã /newses
        message_body = '/newses'
        
        if message_body.strip().lower() == '/newses':
            print("3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /newses")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            new_session_id = session_manager.create_new_session_after_order(sender_id)
            print(f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {new_session_id}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirmation_message = f"‚úÖ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞! ID: {new_session_id}\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥. üå∏"
            await whatsapp_utils.send_whatsapp_message(sender_id, confirmation_message, sender_id, new_session_id)
            
            print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        assert len(sent_messages) == 1, f"–û–∂–∏–¥–∞–ª–æ—Å—å 1 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–æ {len(sent_messages)}"
        sent_msg = sent_messages[0]
        assert sent_msg['to'] == sender_id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ —Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
        assert "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞" in sent_msg['message'], "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
        assert new_session_id in sent_msg['message'], "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–π
        assert new_session_id != initial_session_id, "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–π"
        print("‚úÖ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –ø—É—Å—Ç–∞—è
        new_history = database.get_conversation_history_for_ai(sender_id, new_session_id)
        assert len(new_history) == 0, f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(new_history)} —Å–æ–æ–±—â–µ–Ω–∏–π"
        print("‚úÖ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –ø—É—Å—Ç–∞—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ—Ç—Ä–æ–Ω—É—Ç–æ–π
        old_history = database.get_conversation_history_for_ai(sender_id, initial_session_id)
        assert len(old_history) >= 3, f"–°—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(old_history)}"
        print("‚úÖ –°—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ—Ç—Ä–æ–Ω—É—Ç–æ–π")
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞
        print("5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏")
        current_session_id = session_manager.get_or_create_session_id(sender_id)
        assert current_session_id == new_session_id, f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π, –Ω–æ –∞–∫—Ç–∏–≤–Ω–∞ {current_session_id}"
        print("‚úÖ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å—Ç–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π")
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        whatsapp_utils.send_whatsapp_message = original_send
    
    print("\n=== –í–°–ï –¢–ï–°–¢–´ WEBHOOK –° /NEWSES –ü–†–û–ô–î–ï–ù–´ ===")

if __name__ == "__main__":
    import asyncio
    asyncio.run(test_newses_webhook()) 