"""
–¢–µ—Å—Ç—ã –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–µ—Å—Å–∏–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src import session_manager
from datetime import datetime, timedelta
import time

def test_session_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"""
    print("üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏")
    
    sender_id = "1234567890"
    session_id = session_manager.create_new_session_id(sender_id)
    
    print(f"   –°–æ–∑–¥–∞–Ω session_id: {session_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç YYYYMMDD_hhmmss
    parts = session_id.split('_')
    assert len(parts) == 2, f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç session_id: {session_id}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å - —ç—Ç–æ –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYYMMDD
    date_part = parts[0]
    assert len(date_part) == 8, f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ session_id: {date_part}"
    assert date_part.isdigit(), f"–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã: {date_part}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å - —ç—Ç–æ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ hhmmss
    time_part = parts[1]
    assert len(time_part) == 6, f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ session_id: {time_part}"
    assert time_part.isdigit(), f"–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã: {time_part}"
    
    print("   ‚úÖ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ø—Ä–æ–π–¥–µ–Ω")

def test_session_activity_check():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏"""
    print("üß™ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
    sender_id = "1234567890"
    session_id = session_manager.create_new_session_id(sender_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞)
    is_active = session_manager.is_session_active(sender_id, session_id)
    print(f"   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏: {is_active}")
    
    # –í —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç
    print("   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω")

def test_force_new_session():
    """–¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"""
    print("üß™ –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏")
    
    sender_id = "1234567890"
    new_session_id = session_manager.force_new_session(sender_id)
    
    print(f"   –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω session_id: {new_session_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Å—Å–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫—ç—à
    assert sender_id in session_manager.SESSION_CACHE, "–°–µ—Å—Å–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫—ç—à"
    assert session_manager.SESSION_CACHE[sender_id] == new_session_id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ—Å—Å–∏—è –≤ –∫—ç—à–µ"
    
    print("   ‚úÖ –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω")

def test_order_session_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞"""
    print("üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞")
    
    sender_id = "1234567890"
    new_session_id = session_manager.create_new_session_after_order(sender_id)
    
    print(f"   –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞: {new_session_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Å—Å–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫—ç—à
    assert sender_id in session_manager.SESSION_CACHE, "–°–µ—Å—Å–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫—ç—à"
    assert session_manager.SESSION_CACHE[sender_id] == new_session_id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ—Å—Å–∏—è –≤ –∫—ç—à–µ"
    
    print("   ‚úÖ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–π–¥–µ–Ω")

def test_session_cache():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –∫—ç—à–∞ —Å–µ—Å—Å–∏–π"""
    print("üß™ –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –∫—ç—à–∞ —Å–µ—Å—Å–∏–π")
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à
    session_manager.clear_session_cache()
    assert len(session_manager.SESSION_CACHE) == 0, "–ö—ç—à –Ω–µ –æ—á–∏—â–µ–Ω"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
    sender_id = "1234567890"
    session_id = "20241220_143052"
    session_manager.SESSION_CACHE[sender_id] = session_id
    
    assert len(session_manager.SESSION_CACHE) == 1, "–°–µ—Å—Å–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫—ç—à"
    assert session_manager.SESSION_CACHE[sender_id] == session_id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ—Å—Å–∏—è –≤ –∫—ç—à–µ"
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à
    session_manager.clear_session_cache()
    assert len(session_manager.SESSION_CACHE) == 0, "–ö—ç—à –Ω–µ –æ—á–∏—â–µ–Ω"
    
    print("   ‚úÖ –¢–µ—Å—Ç –∫—ç—à–∞ —Å–µ—Å—Å–∏–π –ø—Ä–æ–π–¥–µ–Ω")

def test_session_format():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ session_id"""
    print("üß™ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ session_id")
    
    sender_id = "1234567890"
    session_id = session_manager.create_new_session_id(sender_id)
    
    print(f"   –°–æ–∑–¥–∞–Ω session_id: {session_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ session_id –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç sender_id
    assert sender_id not in session_id, f"session_id –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å sender_id: {session_id}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç YYYYMMDD_hhmmss
    import re
    pattern = r'^\d{8}_\d{6}$'
    assert re.match(pattern, session_id), f"session_id –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É YYYYMMDD_hhmmss: {session_id}"
    
    print("   ‚úÖ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ session_id –ø—Ä–æ–π–¥–µ–Ω")

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ú–ï–ù–ï–î–ñ–ï–†–ê –°–ï–°–°–ò–ô")
    print("=" * 50)
    
    try:
        test_session_creation()
        test_session_activity_check()
        test_force_new_session()
        test_order_session_creation()
        test_session_cache()
        test_session_format()
        
        print("\n" + "=" * 50)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ú–ï–ù–ï–î–ñ–ï–†–ê –°–ï–°–°–ò–ô –ü–†–û–ô–î–ï–ù–´")
        print("\n–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–µ—Å—Å–∏–π –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ê–•: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 