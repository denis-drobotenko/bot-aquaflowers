#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
"""

import sys
import os
import pytest
import asyncio
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from src import database, session_manager, command_handler, whatsapp_utils

@pytest.mark.asyncio
async def test_order_confirmation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    print("=== –¢–ï–°–¢ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ó–ê–ö–ê–ó–ê ===")
    
    sender_id = "test_user_order_confirmation"
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    session_id = session_manager.get_or_create_session_id(sender_id)
    print(f"1. –°–µ—Å—Å–∏—è: {session_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
    order_data = {
        'bouquet': 'Spirit üå∏',
        'date': '2025-07-05',
        'time': '14:00',
        'delivery_needed': True,
        'address': 'Test Address, Phuket',
        'card_needed': True,
        'card_text': '–° –ª—é–±–æ–≤—å—é!',
        'recipient_name': 'Test Recipient',
        'recipient_phone': '+79123456789',
        'retailer_id': 'test_retailer_id'
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏
    for key, value in order_data.items():
        database.add_message(sender_id, session_id, "system", f"[SAVED: {key}={value}]")
    
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏—Å—Ç–æ—Ä–∏—é")
    
    # –¢–µ—Å—Ç 2: –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    print("2. –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
    
    # –ú–æ–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp –∏ LINE
    sent_messages = []
    sent_line = []
    async def fake_send_message(to, msg, sender_id=None, session_id=None):
        sent_messages.append({
            'to': to,
            'message': msg,
            'sender_id': sender_id,
            'session_id': session_id
        })
        return True
    class FakeLineBotApi:
        def push_message(self, group_id, text_message):
            sent_line.append({'group_id': group_id, 'text': text_message.text})
    # –ü–æ–¥–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    import src.order_utils as order_utils
    import src.whatsapp_utils as whatsapp_utils
    original_send = whatsapp_utils.send_whatsapp_message
    original_line_api = order_utils.line_bot_api
    whatsapp_utils.send_whatsapp_message = fake_send_message
    order_utils.line_bot_api = FakeLineBotApi()
    try:
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É confirm_order
        command = {
            'type': 'confirm_order',
            'order_summary': '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É! üå∏'
        }
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        result = await command_handler.handle_confirm_order(sender_id, session_id, command)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ
        assert result['status'] == 'success', f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è —É—Å–ø–µ—à–Ω–æ, –Ω–æ –ø–æ–ª—É—á–∏–ª–∏: {result['status']}"
        assert result['action'] == 'order_confirmed', f"–î–µ–π—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'order_confirmed', –Ω–æ –ø–æ–ª—É—á–∏–ª–∏: {result['action']}"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–∑–¥–∞–ª–∞—Å—å –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è
        new_session_id = result.get('new_session_id')
        assert new_session_id, "–î–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å—Å—è –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è"
        assert new_session_id != session_id, "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–π"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –ø—É—Å—Ç–∞—è
        new_history = database.get_conversation_history_for_ai(sender_id, new_session_id)
        assert len(new_history) == 0, f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(new_history)} —Å–æ–æ–±—â–µ–Ω–∏–π"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å—Ç–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π
        current_session = session_manager.get_or_create_session_id(sender_id)
        assert current_session == new_session_id, f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π, –Ω–æ –∞–∫—Ç–∏–≤–Ω–∞ {current_session}"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ—Ç—Ä–æ–Ω—É—Ç–æ–π
        old_history = database.get_conversation_history_for_ai(sender_id, session_id)
        assert len(old_history) >= len(order_data), f"–°—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(old_history)} —Å–æ–æ–±—â–µ–Ω–∏–π"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –û–î–ù–û —Å–æ–æ–±—â–µ–Ω–∏–µ —Å üå∏
        assert len(sent_messages) == 1, f"–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 1 —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∞ –Ω–µ {len(sent_messages)}"
        assert sent_messages[0]['message'].strip().endswith('üå∏'), "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–ª–∂–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ üå∏"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ LINE –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
        assert len(sent_line) == 1, f"–í LINE –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 1 —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ –Ω–µ {len(sent_line)}"
        assert 'üå∏' not in sent_line[0]['text'], "–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è LINE –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —ç–º–æ–¥–∑–∏ üå∏"
        assert 'NEW ORDER CONFIRMED!' in sent_line[0]['text'], "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º"
        assert '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô!' in sent_line[0]['text'], "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–∞–π—Å–∫–æ–º"
    finally:
        whatsapp_utils.send_whatsapp_message = original_send
        order_utils.line_bot_api = original_line_api
    
    print("\n=== –í–°–ï –¢–ï–°–¢–´ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ó–ê–ö–ê–ó–ê –ü–†–û–ô–î–ï–ù–´ ===")

if __name__ == "__main__":
    asyncio.run(test_order_confirmation()) 