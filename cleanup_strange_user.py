#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
from google.cloud import firestore

async def cleanup_strange_user():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ sender_id"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    users_ref = db.collection('users')
    
    print("üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    docs = users_ref.stream()
    
    for doc in docs:
        user_data = doc.to_dict()
        doc_id = doc.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ sender_id
        if 'sender_id' not in user_data or not user_data['sender_id']:
            print(f"üîç –ù–∞–π–¥–µ–Ω —Å—Ç—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
            print(f"   Doc ID: {doc_id}")
            print(f"   Data: {user_data}")
            
            try:
                doc_ref = users_ref.document(doc_id)
                doc_ref.delete()
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        else:
            print(f"‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {doc_id} -> {user_data.get('sender_id')}")
    
    print("=" * 60)
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(cleanup_strange_user()) 