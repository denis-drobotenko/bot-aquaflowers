#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
"""

import asyncio
from src.repositories.user_repository import UserRepository
from src.repositories.message_repository import MessageRepository

async def test_users():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î...")
    
    # –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n1. –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    try:
        repo = UserRepository()
        users = await repo.get_all_users()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {len(users)}")
        
        if users:
            print("üìã –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            for i, user in enumerate(users[:3]):
                print(f"  {i+1}. ID: {user.user_id}, –ò–º—è: {user.name}, –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}")
        else:
            print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î –Ω–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    # –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n2. –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    try:
        repo = MessageRepository()
        messages = await repo.get_all_messages()
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ë–î: {len(messages)}")
        
        if messages:
            print("üìã –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:")
            for i, msg in enumerate(messages[:3]):
                print(f"  {i+1}. –û—Ç: {msg.sender_id}, –¢–µ–∫—Å—Ç: {msg.text[:50]}...")
        else:
            print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ë–î –Ω–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

if __name__ == "__main__":
    asyncio.run(test_users()) 