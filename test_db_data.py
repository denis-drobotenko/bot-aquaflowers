#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
"""

import asyncio
from src.repositories.order_repository import OrderRepository
from src.services.order_service import OrderService

async def test_db_data():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    print("\n1. –¢–µ—Å—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    try:
        repo = OrderRepository()
        print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω")
        print(f"‚úÖ Firestore –¥–æ—Å—Ç—É–ø–µ–Ω: {repo.db is not None}")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã
        orders = await repo.get_all_orders()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ë–î: {len(orders)}")
        
        if orders:
            print("üìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–∫–∞–∑–æ–≤:")
            for i, order in enumerate(orders[:3]):
                print(f"  {i+1}. ID: {order.order_id}, –°—Ç–∞—Ç—É—Å: {order.status.value}, –ö–ª–∏–µ–Ω—Ç: {order.sender_id}")
        else:
            print("‚ö†Ô∏è –ó–∞–∫–∞–∑–æ–≤ –≤ –ë–î –Ω–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å
    print("\n2. –¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        service = OrderService()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –¥–ª—è CRM
        all_orders = await service.get_all_orders_for_crm()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è CRM: {len(all_orders)}")
        
        if all_orders:
            print("üìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è CRM:")
            for i, order in enumerate(all_orders[:3]):
                print(f"  {i+1}. ID: {order['order_id']}, –°—Ç–∞—Ç—É—Å: {order['status']}, –ö–ª–∏–µ–Ω—Ç: {order['sender_id']}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
        customer_summary = await service.get_customer_orders_summary()
        print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–∫–∞–∑–∞–º–∏: {len(customer_summary['with_orders'])}")
        print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∑–∞–∫–∞–∑–æ–≤: {len(customer_summary['without_orders'])}")
        
        if customer_summary['with_orders']:
            print("üìã –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–∫–∞–∑–∞–º–∏:")
            for i, customer in enumerate(customer_summary['with_orders'][:3]):
                print(f"  {i+1}. {customer['name']} ({customer['phone']}) - {customer['total_orders']} –∑–∞–∫–∞–∑–æ–≤")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_db_data()) 