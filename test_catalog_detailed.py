#!/usr/bin/env python3
"""
–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
"""

import asyncio
import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_catalog_detailed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    try:
        from services.catalog_service import CatalogService
        from config.settings import WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä
        test_number = "79140775712"
        
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ –Ω–æ–º–µ—Ä: {test_number}")
        
        # 1. –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞
        print("üìã –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞...")
        catalog_service = CatalogService(WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN)
        
        # 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        print("üîÑ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞...")
        all_products = await catalog_service.get_products()
        print(f"üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_products)}")
        
        # 3. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        print("‚úÖ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã...")
        available_products = await catalog_service.get_available_products()
        print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(available_products)}")
        
        # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
        print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö:")
        for i, product in enumerate(available_products, 1):
            name = product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            price = product.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            availability = product.get('availability', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            retailer_id = product.get('retailer_id', '–ù–µ—Ç ID')
            print(f"  {i}. {name} - {price} (–ù–∞–ª–∏—á–∏–µ: {availability}, ID: {retailer_id})")
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞
        print("\nüì§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞...")
        from services.catalog_sender import handle_send_catalog
        
        result = await handle_send_catalog(test_number, test_number, "test_session")
        
        if result:
            print("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_catalog_detailed()) 