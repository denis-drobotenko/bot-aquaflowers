#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –≤ AI
"""

import asyncio
import os
import sys
sys.path.append('src')

from src.services.catalog_service import CatalogService
from src.utils.ai_utils import format_catalog_for_ai

async def test_catalog_content():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    from src.config.settings import WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN
    
    if not WHATSAPP_CATALOG_ID or not WHATSAPP_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è WHATSAPP_CATALOG_ID –∏–ª–∏ WHATSAPP_TOKEN")
        return
    
    catalog_id = WHATSAPP_CATALOG_ID
    access_token = WHATSAPP_TOKEN
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–∞–ª–æ–≥ {catalog_id}")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞
    catalog_service = CatalogService(catalog_id, access_token)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    print("\nüì¶ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã...")
    all_products = catalog_service.get_products()
    print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_products)}")
    
    if all_products:
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:")
        first_product = all_products[0]
        for key, value in first_product.items():
            print(f"  {key}: {value}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    print("\n‚úÖ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã...")
    available_products = catalog_service.get_available_products()
    print(f"–î–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(available_products)}")
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª—è AI
    print("\nü§ñ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è AI:")
    catalog_text = format_catalog_for_ai(available_products)
    print("=" * 80)
    print(catalog_text)
    print("=" * 80)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    print("\nüìä –î–µ—Ç–∞–ª–∏ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:")
    for i, product in enumerate(available_products, 1):
        print(f"\n{i}. {product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        print(f"   ID: {product.get('id', 'N/A')}")
        print(f"   Retailer ID: {product.get('retailer_id', 'N/A')}")
        print(f"   –¶–µ–Ω–∞: {product.get('price', 'N/A')}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {product.get('description', 'N/A')[:100]}...")
        print(f"   –ù–∞–ª–∏—á–∏–µ: {product.get('availability', 'N/A')}")
        print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {product.get('image_url', 'N/A')}")

if __name__ == "__main__":
    asyncio.run(test_catalog_content()) 