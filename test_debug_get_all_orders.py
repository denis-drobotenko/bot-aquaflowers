#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –º–µ—Ç–æ–¥–∞ get_all_orders
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_debug_get_all_orders():
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –º–µ—Ç–æ–¥–∞ get_all_orders...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ orders
        orders_collection = db.collection('orders')
        user_docs = list(orders_collection.stream())
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ orders: {len(user_docs)}")
        
        for user_doc in user_docs:
            sender_id = user_doc.id
            print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {sender_id}")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—é sessions –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sessions_ref = user_doc.reference.collection('sessions')
                session_docs = list(sessions_ref.stream())
                
                print(f"   üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(session_docs)}")
                
                for session_doc in session_docs:
                    data = session_doc.to_dict()
                    print(f"   üîç –°–µ—Å—Å–∏—è: {session_doc.id} | –°—Ç–∞—Ç—É—Å: {data.get('status', 'N/A')}")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {sender_id}: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞—à–µ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: 79140775712")
        test_user_ref = db.collection('orders').document('79140775712')
        test_user_doc = test_user_ref.get()
        
        if test_user_doc.exists:
            print("   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—é sessions
            test_sessions_ref = test_user_ref.collection('sessions')
            test_sessions = list(test_sessions_ref.stream())
            
            print(f"   üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(test_sessions)}")
            
            for session_doc in test_sessions:
                data = session_doc.to_dict()
                print(f"   üîç –°–µ—Å—Å–∏—è: {session_doc.id} | –°—Ç–∞—Ç—É—Å: {data.get('status', 'N/A')}")
        else:
            print("   ‚ùå –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_debug_get_all_orders()) 