#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º
"""

import asyncio
import sys
import os
import json
import httpx

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

async def simulate_user_message(message_text: str, sender_id: str = "79140775712", sender_name: str = "Denis"):
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç—É"""
    
    # –î–∞–Ω–Ω—ã–µ webhook'–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç WhatsApp
    webhook_data = {
        "object": "whatsapp_business_account",
        "entry": [{
            "id": "742818811434193",
            "changes": [{
                "value": {
                    "messaging_product": "whatsapp",
                    "metadata": {
                        "display_phone_number": "494991623707876",
                        "phone_number_id": "494991623707876"
                    },
                    "contacts": [{
                        "profile": {
                            "name": sender_name
                        },
                        "wa_id": sender_id
                    }],
                    "messages": [{
                        "from": sender_id,
                        "id": f"wamid.test.{asyncio.get_event_loop().time()}",
                        "timestamp": str(int(asyncio.get_event_loop().time())),
                        "text": {
                            "body": message_text
                        },
                        "type": "text"
                    }]
                },
                "field": "messages"
            }]
        }]
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(
                "http://localhost:8080/webhook",
                json=webhook_data,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ '{message_text}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} - {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
            return False

async def test_bot_dialog():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"""
    
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ —Å AuraFlora Bot")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    test_scenarios = [
        {
            "name": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
            "message": "–ü—Ä–∏–≤–µ—Ç!",
            "expected": "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
        },
        {
            "name": "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥",
            "message": "–î–∞, –ø–æ–∫–∞–∂–∏—Ç–µ",
            "expected": "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Å —Ñ–æ—Ç–æ"
        },
        {
            "name": "–í—ã–±–æ—Ä –±—É–∫–µ—Ç–∞",
            "message": "–•–æ—á—É –±—É–∫–µ—Ç Love is on the air",
            "expected": "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä –∏ —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É"
        },
        {
            "name": "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è",
            "message": "/newses",
            "expected": "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é"
        }
    ]
    
    for i, scenario in enumerate(test_scenarios, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {scenario['name']}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: '{scenario['message']}'")
        print(f"üéØ –û–∂–∏–¥–∞–µ–º: {scenario['expected']}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        success = await simulate_user_message(scenario['message'])
        
        if success:
            print("‚è≥ –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞...")
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
            await asyncio.sleep(3)
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        print("-" * 30)

async def test_simple_greeting():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    print("üëã –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ...")
    
    success = await simulate_user_message("–ü—Ä–∏–≤–µ—Ç!")
    
    if success:
        print("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ WhatsApp")
        print("üí° –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")

if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description="–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º")
    parser.add_argument("--simple", action="store_true", help="–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
    parser.add_argument("--full", action="store_true", help="–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞")
    
    args = parser.parse_args()
    
    if args.simple:
        asyncio.run(test_simple_greeting())
    elif args.full:
        asyncio.run(test_bot_dialog())
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        asyncio.run(test_simple_greeting()) 