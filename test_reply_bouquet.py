#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–ø–ª–∞–µ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

async def test_reply_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–ø–ª–∞–µ–≤"""
    try:
        from src.services.message_processor import MessageProcessor
        from services.message_service import MessageService
        from services.session_service import SessionService
        from models.message import Message, MessageRole
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        message_processor = MessageProcessor()
        message_service = MessageService()
        session_service = SessionService()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        sender_id = "79140775712"
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–ø–ª–∞–µ–≤")
        
        # 1. –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        print("\n1. –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        session_id = await session_service.get_or_create_session_id(sender_id)
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Å—Å–∏—é: {session_id}")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î
        print("\n2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º
        bouquet_message = Message(
            sender_id=sender_id,
            session_id=session_id,
            role=MessageRole.ASSISTANT,
            content="Love is on the air\n2 200,00 ‡∏ø üå∏",
            wa_message_id="wamid.bouquet_message"
        )
        await message_service.add_message_to_conversation(bouquet_message)
        
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        regular_message = Message(
            sender_id=sender_id,
            session_id=session_id,
            role=MessageRole.ASSISTANT,
            content="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
            wa_message_id="wamid.regular_message"
        )
        await message_service.add_message_to_conversation(regular_message)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_message = Message(
            sender_id=sender_id,
            session_id=session_id,
            role=MessageRole.USER,
            content="–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ!",
            wa_message_id="wamid.user_message"
        )
        await message_service.add_message_to_conversation(user_message)
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞...")
        history = await message_service.get_conversation_history_for_ai_by_sender(sender_id, session_id, limit=10)
        print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π:")
        for i, msg in enumerate(history[-3:], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3
            print(f"  {i}. [{msg.get('role')}] {msg.get('content', '')[:50]}...")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—É–∫–µ—Ç–æ–º...")
        user_reply = "–•–æ—á—É —ç—Ç–æ—Ç –±—É–∫–µ—Ç"
        
        result = await message_handler.process_text_message(
            sender_id, user_reply, "Test User", "wamid.user_reply", "wamid.bouquet_message"
        )
        
        if result:
            response, response_en, response_thai, command = result
            print(f"‚úÖ –†–µ–ø–ª–∞–π –Ω–∞ –±—É–∫–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
            print(f"–û—Ç–≤–µ—Ç: {response[:100]}...")
        else:
            print("‚ùå –†–µ–ø–ª–∞–π –Ω–∞ –±—É–∫–µ—Ç –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–ª–∞–π –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–ª–∞–π –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        user_reply2 = "–û—Ç–ª–∏—á–Ω–æ!"
        
        result2 = await message_handler.process_text_message(
            sender_id, user_reply2, "Test User", "wamid.user_reply2", "wamid.regular_message"
        )
        
        if result2:
            response, response_en, response_thai, command = result2
            print(f"‚úÖ –†–µ–ø–ª–∞–π –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
            print(f"–û—Ç–≤–µ—Ç: {response[:100]}...")
        else:
            print("‚ùå –†–µ–ø–ª–∞–π –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ä–µ–ø–ª–∞—è
        print("\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ä–µ–ø–ª–∞—è...")
        regular_user_message = "–ü—Ä–∏–≤–µ—Ç!"
        
        result3 = await message_handler.process_text_message(
            sender_id, regular_user_message, "Test User", "wamid.regular_user_message"
        )
        
        if result3:
            response, response_en, response_thai, command = result3
            print(f"‚úÖ –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!")
            print(f"–û—Ç–≤–µ—Ç: {response[:100]}...")
        else:
            print("‚ùå –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_reply_handling()) 