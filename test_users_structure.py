#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_users_structure():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
        users_ref = db.collection('users')
        users = list(users_ref.stream())
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        for user_doc in users:
            user_data = user_doc.to_dict()
            print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_doc.id}")
            print(f"   –î–∞–Ω–Ω—ã–µ: {user_data}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            subcollections = user_doc.reference.collections()
            for subcollection in subcollections:
                print(f"   üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
                subdocs = list(subcollection.stream())
                print(f"      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(subdocs)}")
                
                for subdoc in subdocs:
                    subdata = subdoc.to_dict()
                    print(f"      üìÑ {subdoc.id}: {subdata}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_users_structure()) 