#!/usr/bin/env python3
"""
–¢–µ—Å—Ç AI —Å–µ—Ä–≤–∏—Å–∞
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.services.ai_service import AIService
from src.models.message import Message, MessageRole
from src.config.settings import GEMINI_API_KEY

async def test_ai():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç AI —Å–µ—Ä–≤–∏—Å"""
    print("=== –¢–ï–°–¢ AI –°–ï–†–í–ò–°–ê ===")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI —Å–µ—Ä–≤–∏—Å
    ai_service = AIService(GEMINI_API_KEY)
    print("‚úÖ AI —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = Message(
        sender_id="test_user",
        session_id="test_session",
        role=MessageRole.USER,
        content="–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ü–≤–µ—Ç–æ–≤"
    )
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç AI...")
        response = await ai_service.generate_response([test_message], user_lang='ru')
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response[:100]}...")
        
        # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
        print("üîÑ –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç...")
        text, text_en, text_thai, command = ai_service.parse_ai_response(response)
        
        print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω:")
        print(f"   –¢–µ–∫—Å—Ç: {text[:50]}...")
        print(f"   –ö–æ–º–∞–Ω–¥–∞: {command}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    asyncio.run(test_ai()) 