#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.services.catalog_sender import catalog_sender
from src.repositories.message_repository import MessageRepository
from src.models.message import Message, MessageRole
from datetime import datetime
from src.services.message_service import MessageService
from src.services.session_service import SessionService
from src.config.settings import WHATSAPP_CATALOG_ID, WHATSAPP_TOKEN

async def test_catalog_with_images():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_number = "79123456789"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
    session_id = "test_catalog_session"
    
    print(f"üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ –Ω–æ–º–µ—Ä: {test_number}")
    print(f"üÜî Session ID: {session_id}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥
    success = await catalog_sender.send_catalog(test_number, session_id)
    
    if success:
        print("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –ë–î —Å image_url
        repo = MessageRepository()
        messages = await repo.get_conversation_history_by_sender(test_number, session_id, limit=50)
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏")
        
        for i, msg in enumerate(messages):
            role = msg.get('role', 'unknown')
            content = msg.get('content', '')[:50] + "..." if len(msg.get('content', '')) > 50 else msg.get('content', '')
            image_url = msg.get('image_url')
            
            print(f"  {i+1}. [{role}] {content}")
            if image_url:
                print(f"     üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_url}")
            else:
                print(f"     üìù –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞")

async def test_image_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞"""
    print("\nüñºÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    repo = MessageRepository()
    test_sender = "test_image_user"
    test_session = "test_image_session"
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    try:
        from src.services.session_service import SessionService
        session_service = SessionService()
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
        session_id = await session_service.get_or_create_session_id(test_sender)
        test_session = session_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_id}")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    test_message = Message(
        sender_id=test_sender,
        session_id=test_session,
        role=MessageRole.ASSISTANT,
        content="–í–æ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –±—É–∫–µ—Ç! üå∏",
        content_en="Here's a beautiful bouquet! üå∏",
        content_thai="‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°! üå∏",
        image_url="https://example.com/bouquet.jpg",
        timestamp=datetime.now()
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    success = await repo.add_message_to_conversation(test_message)
    
    if success:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        messages = await repo.get_conversation_history_by_sender(test_sender, test_session, limit=10)
        
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        for msg in messages:
            if msg.get('image_url'):
                print(f"üñºÔ∏è  –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º: {msg.get('image_url')}")
                print(f"   –¢–µ–∫—Å—Ç: {msg.get('content')}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")

async def test_chat_history_with_images():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    session_service = SessionService()
    message_service = MessageService()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –∏–∑ –ë–î
    db = session_service.db
    sessions = db.collection_group('sessions').limit(1).stream()
    session_list = list(sessions)
    
    if not session_list:
        print("‚ùå –ù–µ—Ç —Å–µ—Å—Å–∏–π –≤ –ë–î –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    session_doc = session_list[0]
    session_path = session_doc.reference.path
    print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é: {session_path}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º sender_id –∏ session_id –∏–∑ –ø—É—Ç–∏
    path_parts = session_path.split('/')
    sender_id = path_parts[1]
    session_id = path_parts[3]
    
    print(f"üë§ Sender ID: {sender_id}")
    print(f"üÜî Session ID: {session_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    try:
        chat_history = await message_service.get_conversation_history_for_ai_by_sender(sender_id, session_id)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: {len(chat_history)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        messages_with_images = [msg for msg in chat_history if msg.get('image_url')]
        print(f"üñºÔ∏è  –°–æ–æ–±—â–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(messages_with_images)}")
        
        if messages_with_images:
            print("\nüì∏ –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:")
            for i, msg in enumerate(messages_with_images[:3]):
                role = msg.get('role', 'unknown')
                content = msg.get('content', '')[:50]
                image_url = msg.get('image_url')
                print(f"  {i+1}. [{role}] {content}...")
                print(f"      üñºÔ∏è  {image_url}")
        else:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        assistant_messages = [msg for msg in chat_history if msg.get('role') == 'assistant']
        print(f"\nü§ñ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {len(assistant_messages)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞
        catalog_messages = []
        for msg in assistant_messages:
            content = msg.get('content', '')
            if '\n' in content and '‡∏ø' in content:  # –ü—Ä–∏–∑–Ω–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞
                catalog_messages.append(msg)
        
        print(f"üì¶ –°–æ–æ–±—â–µ–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞: {len(catalog_messages)}")
        
        if catalog_messages:
            print("\nüìã –°–æ–æ–±—â–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞:")
            for i, msg in enumerate(catalog_messages[:5]):
                content = msg.get('content', '')
                image_url = msg.get('image_url')
                has_image = "‚úÖ" if image_url else "‚ùå"
                print(f"  {i+1}. {has_image} {content[:30]}...")
                if image_url:
                    print(f"      üñºÔ∏è  {image_url[:50]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'src/aquaf.json'
    os.environ['GOOGLE_CLOUD_PROJECT'] = 'aquaf-464414'
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    asyncio.run(test_image_display())
    
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    # asyncio.run(test_catalog_with_images())
    
    asyncio.run(test_chat_history_with_images()) 