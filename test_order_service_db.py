#!/usr/bin/env python3
"""
–¢–µ—Å—Ç OrderService —Å –ø—Ä—è–º—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –ë–î
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.services.order_service import OrderService
from src.models.order import OrderStatus

async def test_order_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ OrderService"""
    print("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç OrderService...")
    
    order_service = OrderService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_session_id = f"test_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    test_sender_id = "test_user_123"
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è: {test_session_id}")
    print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_sender_id}")
    
    try:
        # 1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
        order_data = {
            'delivery_needed': True,
            'address': 'Test Address 123',
            'card_needed': True,
            'card_text': 'Happy Birthday!'
        }
        
        order_id = await order_service.update_order_data(test_session_id, test_sender_id, order_data)
        print(f"‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å ID: {order_id}")
        
        # 2. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
        item_data = {
            'bouquet': 'Test Bouquet',
            'quantity': 2,
            'price': '1 500,00 ‡∏ø',
            'notes': 'Test notes',
            'product_id': 'test_product_123'
        }
        
        order_id = await order_service.add_item(test_session_id, test_sender_id, item_data)
        print(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–∫–∞–∑: {order_id}")
        
        # 3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞...")
        retrieved_order = await order_service.get_order_data(test_session_id, test_sender_id)
        print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:")
        print(f"   - ID: {retrieved_order.get('id')}")
        print(f"   - –°—Ç–∞—Ç—É—Å: {retrieved_order.get('status')}")
        print(f"   - –î–æ—Å—Ç–∞–≤–∫–∞: {retrieved_order.get('delivery_needed')}")
        print(f"   - –ê–¥—Ä–µ—Å: {retrieved_order.get('address')}")
        print(f"   - –¢–æ–≤–∞—Ä—ã: {len(retrieved_order.get('items', []))}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã
        items = retrieved_order.get('items', [])
        if items:
            print(f"   - –ü–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä: {items[0]}")
        
        # 4. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ —Ç–æ–≤–∞—Ä–∞...")
        item_data2 = {
            'bouquet': 'Second Test Bouquet',
            'quantity': 1,
            'price': '2 000,00 ‡∏ø',
            'product_id': 'test_product_456'
        }
        
        order_id = await order_service.add_item(test_session_id, test_sender_id, item_data2)
        print(f"‚úÖ –í—Ç–æ—Ä–æ–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # 5. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞...")
        updated_order = await order_service.get_order_data(test_session_id, test_sender_id)
        items = updated_order.get('items', [])
        print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {len(items)}")
        for i, item in enumerate(items, 1):
            print(f"   {i}. {item.get('bouquet')} - {item.get('price')} (x{item.get('quantity')})")
        
        # 6. –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
        if items:
            product_id_to_remove = items[0].get('product_id')
            success = await order_service.remove_item(test_session_id, test_sender_id, product_id_to_remove)
            print(f"‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω: {success}")
        
        # 7. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        print("\n7Ô∏è‚É£ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞...")
        await order_service.update_order_status(test_session_id, test_sender_id, OrderStatus.CONFIRMED)
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ CONFIRMED")
        
        # 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\n8Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞...")
        final_order = await order_service.get_order_data(test_session_id, test_sender_id)
        print(f"üì¶ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {final_order.get('status')}")
        print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {len(final_order.get('items', []))}")
        
        # 9. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
        print("\n9Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞...")
        order_result = await order_service.process_order_for_operator(test_session_id, test_sender_id)
        print(f"üìã –ì–æ—Ç–æ–≤ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: {order_result.get('is_ready_for_operator')}")
        print(f"üìã –í–∞–ª–∏–¥–∞—Ü–∏—è: {order_result.get('validation')}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_order_service()) 