#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–π —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from google.cloud import firestore

async def test_all_subcollections():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–π —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firestore
    db = firestore.Client()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_ref = db.collection('users')
        users = list(users_ref.stream())
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        total_subcollections = 0
        
        for user_doc in users:
            user_data = user_doc.to_dict()
            sender_id = user_data.get('sender_id', user_doc.id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏
            subcollections = user_doc.reference.collections()
            subcollections_list = list(subcollections)
            
            if subcollections_list:
                print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('name', 'Unknown')} ({sender_id})")
                print(f"   ID –¥–æ–∫—É–º–µ–Ω—Ç–∞: {user_doc.id}")
                
                for subcollection in subcollections_list:
                    print(f"   üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
                    subdocs = list(subcollection.stream())
                    print(f"      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(subdocs)}")
                    total_subcollections += len(subdocs)
                    
                    for subdoc in subdocs:
                        subdata = subdoc.to_dict()
                        print(f"      üìÑ {subdoc.id}: {subdata}")
        
        print(f"\nüìä –ò—Ç–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö: {total_subcollections}")
        
        if total_subcollections == 0:
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é conversations...")
            conversations_ref = db.collection('conversations')
            conversations = list(conversations_ref.stream())
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ conversations: {len(conversations)}")
            
            if conversations:
                for conv_doc in conversations:
                    conv_data = conv_doc.to_dict()
                    print(f"üìÑ {conv_doc.id}: {conv_data}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ conversations
                    conv_subcollections = conv_doc.reference.collections()
                    for subcollection in conv_subcollections:
                        print(f"   üìÇ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è: {subcollection.id}")
                        subdocs = list(subcollection.stream())
                        print(f"      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(subdocs)}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_all_subcollections()) 